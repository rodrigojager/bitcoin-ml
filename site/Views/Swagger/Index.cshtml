@model TechChallenge.Models.SwaggerViewModel
@{
    ViewBag.Title = "Swagger da API Python";
    ViewBag.pTitle = "Swagger";
    ViewBag.pageTitle = "API Python";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <main class="col-md-12">
        <div class="card" style="height: calc(100vh - 110px);">
            <div class="card-body" style="height: 100%; padding: 0;">
                <iframe id="swaggerFrame" src="@Model.DocsUrl" style="border:0; width:100%; height:100%; display:block;"></iframe>
            </div>
        </div>
    </main>
    
</div>

@section styles{ }
@section scripts{
    <script>
        // Tentar ajustar a altura do iframe ao conteúdo (quando mesma origem). Caso contrário, mantém 100% da área visível
        (function(){
            const frame = document.getElementById('swaggerFrame');
            function resize() {
                try {
                    const doc = frame.contentDocument || frame.contentWindow.document;
                    const h = Math.max(
                        doc.body.scrollHeight,
                        doc.documentElement.scrollHeight,
                        doc.body.offsetHeight,
                        doc.documentElement.offsetHeight
                    );
                    if (h && Number.isFinite(h)) {
                        // Se o conteúdo for menor que a área, preenche; se for maior, o iframe terá sua própria rolagem
                        const minH = Math.max(h, window.innerHeight - 110);
                        frame.style.height = minH + 'px';
                    }
                } catch(e) {
                    // cross-origin: segue com height:100% da área visível
                }
            }
            frame.addEventListener('load', function(){
                resize();
                try {
                    const doc = frame.contentDocument || frame.contentWindow.document;
                    const obs = new MutationObserver(()=>resize());
                    obs.observe(doc.body, { childList: true, subtree: true });
                } catch {}
            });
            window.addEventListener('resize', ()=>resize());
        })();
    </script>
}


